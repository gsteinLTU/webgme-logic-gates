/*globals define, WebGMEGlobal*/

/**
 * Generated by VisualizerGenerator 1.7.0 from webgme on Thu Nov 29 2018 16:05:07 GMT-0600 (Central Standard Time).
 */

define(['css!./styles/CircuitSimulatorWidget.css'], function () {
    'use strict';

    var CircuitSimulatorWidget,
        WIDGET_CLASS = 'circuit-simulator';

    CircuitSimulatorWidget = function (logger, container) {
        this._logger = logger.fork('Widget');

        this._el = container;

        this.nodes = {};
        this._initialize();

        this._logger.debug('ctor finished');
    };

    CircuitSimulatorWidget.prototype._initialize = function () {
        var width = this._el.width(),
            height = this._el.height(),
            self = this;

        // set widget class
        this._el.addClass(WIDGET_CLASS);

        // Create a dummy header 
        this._el.append('<iframe src="/routers/DigitalJSRouter/get" style="width:100%;height:100%; padding: 0; margin: 0;"></iframe>');

        // Registering to events can be done with jQuery (as normal)
        this._el.on('dblclick', function (event) {
            event.stopPropagation();
            event.preventDefault();
            self.onBackgroundDblClick();
        });
    };

    CircuitSimulatorWidget.prototype.onWidgetContainerResize = function (width, height) {
        this._logger.debug('Widget is resizing...');
    };

    // Adding/Removing/Updating items
    CircuitSimulatorWidget.prototype.addNode = function (desc) {
        // if (desc) {
        //     // Add node to a table of nodes
        //     var node = document.createElement('div'),
        //         label = 'children';

        //     if (desc.childrenIds.length === 1) {
        //         label = 'child';
        //     }

        //     this.nodes[desc.id] = desc;
        //     node.innerHTML = 'Adding node "' + desc.name + '" (click to view). It has ' + 
        //         desc.childrenIds.length + ' ' + label + '.';

        //     this._el.append(node);
        //     node.onclick = this.onNodeClick.bind(this, desc.id);
        // }
    };

    CircuitSimulatorWidget.prototype.removeNode = function (gmeId) {
        // var desc = this.nodes[gmeId];
        // this._el.append('<div>Removing node "' + desc.name + '"</div>');
        // delete this.nodes[gmeId];
    };

    CircuitSimulatorWidget.prototype.updateNode = function (desc) {
        // if (desc) {
        //     this._logger.debug('Updating node:', desc);
        //     this._el.append('<div>Updating node "' + desc.name + '"</div>');
        // }
    };

    /* * * * * * * * Visualizer event handlers * * * * * * * */

    CircuitSimulatorWidget.prototype.onNodeClick = function (/*id*/) {
        // This currently changes the active node to the given id and
        // this is overridden in the controller.
    };

    CircuitSimulatorWidget.prototype.onBackgroundDblClick = function () {
       // this._el.append('<div>Background was double-clicked!!</div>');
    };

    /* * * * * * * * Visualizer life cycle callbacks * * * * * * * */
    CircuitSimulatorWidget.prototype.destroy = function () {
    };

    CircuitSimulatorWidget.prototype.onActivate = function () {
        this._logger.debug('CircuitSimulatorWidget has been activated');
    };

    CircuitSimulatorWidget.prototype.onDeactivate = function () {
        this._logger.debug('CircuitSimulatorWidget has been deactivated');
    };

    return CircuitSimulatorWidget;
});
